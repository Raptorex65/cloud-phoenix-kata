AWSTemplateFormatVersion : '2010-09-09'
Description: 'Pipeline Stack designed for Phoenix Project'
Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub Owner
  GitHubRepo:
    Type: String
    Description: GitHub Repo
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: main
  GitHubOAuthToken: 
    Type: AWS::SSM::Parameter::Value<String>
    Default: Github_Token
  TemplateFile:
    Default: cfnstructure.yaml
    Description: The file name of the cfn template
    Type: String
  TestStackName:
    Default: TestStack
    Description: A name for the App stack
    Type: String
  ProdStackName:
    Default: ProdStack
    Description: A name for the production stack
    Type: String
  DeployParameterOverrides:
    Description: Parameter overrides for the deploy stage
    Type: String
    Default: '{"DBStringParam": "DBStringParam", "ALBRequestCountTargetValue": "100", "Keyname": "phoenix", "ImageId": "ami-0fe472d8a85bc7b0e"}'
  NewDeployParameterOverrides:
    Description: Parameter overrides for the deploy stage
    Type: String
    Default: '{"DBStringParam": "DBStringParam", "ALBRequestCountTargetValue": "100", "Keyname": "secondKey", "ImageId": "ami-0aa7d40eeae50c9a9"}'
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
  ChangeSetName:
    Default: UpdatePreview
    Description: A name for the production stack change set
    Type: String

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: Phoenix-Pipe
      RoleArn: !GetAtt PipelineRole.Arn
      DisableInboundStageTransitions: []
      Stages:
        - Name: GitHubSource
          Actions:
          - Name: Source
            InputArtifacts: []
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Version: 1
              Provider: GitHub
            Configuration:
              Owner: !Ref GitHubOwner
              Repo: !Ref GitHubRepo
              Branch: !Ref GitHubBranch
              PollForSourceChanges: false
              OAuthToken: !Ref GitHubOAuthToken
            OutputArtifacts:
              - Name: SourceArtifact
            RunOrder: 1
        - Name: Build
          Actions:
          - Name: PhoenixAppBuild
            InputArtifacts:
              - Name: SourceArtifact
            OutputArtifacts:
              - Name: BuildArtifact
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref CodeBuildPhoenix
            RunOrder: 1
        - Name: TestStage
          Actions:
            - Name: Deploy
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS  
                Version: 1
                Provider: CloudFormation
              Configuration: 
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Ref TestStackName
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                ParameterOverrides: !Ref DeployParameterOverrides
                TemplatePath: !Sub "SourceArtifact::${TemplateFile}"
              RunOrder: 1 
            - Name: ApproveTestStack
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'Do you want to create a change set against the production stack and delete the ${TestStackName} stack?'
              RunOrder: '2'
            - Name: DeleteTestStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Ref TestStackName
              RunOrder: '3'
        - Name: ProdStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Ref ProdStackName
                ChangeSetName: !Ref ChangeSetName
                ParameterOverrides: !Ref NewDeployParameterOverrides
                TemplatePath: !Sub "BuildArtifact::${TemplateFile}"
              RunOrder: '1'
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'A new change set was created for the ${ProdStackName} stack. Do you want to implement the changes?'
              RunOrder: '2'
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref ProdStackName
              RunOrder: '3'

      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3

  ArtifactBucket:
      Type: AWS::S3::Bucket
      Properties:
        VersioningConfiguration:
          Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  CodeBuildPhoenix:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      Artifacts: 
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: us-east-1
            Type: PLAINTEXT
          - Name: AWS_ACCOUNT_ID
            Value: /CodeBuild/AWS_ACCOUNT_ID
            Type: PARAMETER_STORE
          - Name: DOCKERHUB_USER
            Value: /CodeBuild/DOCKERHUB_USER
            Type: PARAMETER_STORE
          - Name: DOCKERHUB_TOKEN
            Value: /CodeBuild/DOCKERHUB_TOKEN
            Type: PARAMETER_STORE
        PrivilegedMode: true
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: my-buildspec.yml

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                    - ssm:GetParameters
                Resource: "*"
              - Action:
                  - 'ec2:*'
                  - 'iam:PassRole'
                  - 'iam:CreateRole'
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:PassRole"
                  - "iam:DetachRolePolicy"
                  - "iam:DeleteRolePolicy"
                  - "iam:DeleteRole"
                  - "iam:CreateRole"
                  - "iam:AttachRolePolicy"
                  - "iam:PutRolePolicy"
                Effect: Allow
                Resource: '*'
        - PolicyName: "S3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                Effect: Allow
                Action:
                  - s3:*

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "PushImageToEcr"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                  - ecr:GetAuthorizationToken
                Resource: "*"
        - PolicyName: "CodeBuildLogsRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - "*"
        - PolicyName: "ssm"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
                -
                  Effect: "Allow"
                  Action:
                      - ssm:GetParameters
                  Resource: "*"
        - PolicyName: "S3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
                -
                  Effect: "Allow"
                  Action:
                      - s3:GetObject
                      - s3:PutObject
                      - s3:GetObjectVersion
                  Resource: "*"

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
      Path: /
      Policies:
        - PolicyName: Pipeline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                    - ssm:GetParameters
                Resource: "*"
              - Resource: "*"
                Effect: Allow
                Action:
                  - s3:*
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
              - Action:
                - 'codedeploy:CreateDeployment'
                - 'codedeploy:GetApplicationRevision'
                - 'codedeploy:GetDeployment'
                - 'codedeploy:GetDeploymentConfig'
                - 'codedeploy:RegisterApplicationRevision'
                - 'codedeploy:CreateDeploymentGroup'
                - 'codedeploy:GetApplication'
                Effect: 'Allow'
                Resource: '*'
              - Action:
                - 'ec2:*'
                - 'elasticloadbalancing:*'
                - 'autoscaling:*'
                - 'cloudwatch:*'
                - 's3:*'
                - 'sns:*'
                - 'cloudformation:*'
                - 'ecs:*'
                - 'iam:PassRole'
                Effect: 'Allow'
                Resource: '*'
              - Action:
                - 'cloudformation:CreateStack'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'cloudformation:ValidateTemplate'
                - 'iam:PassRole'
                - 'iam:CreateRole'
                - "iam:GetRole"
                - "iam:GetRolePolicy"
                - "iam:PassRole"
                - "iam:DetachRolePolicy"
                - "iam:DeleteRolePolicy"
                - "iam:DeleteRole"
                - "iam:CreateRole"
                - "iam:AttachRolePolicy"
                - "iam:PutRolePolicy"
                - 'sns:Publish'
                Effect: 'Allow'
                Resource: '*'
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}