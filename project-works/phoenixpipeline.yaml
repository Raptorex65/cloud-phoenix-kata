AWSTemplateFormatVersion : '2010-09-09'
Description: 'Stack for CodePipeline'

Parameters:
  PipelineName:
    Type: String
    Description: Pipeline Name (Lower case only, since S3 bucket names can only have lowercase)
    Default: phoenix-pipeline
  CFNStackname:
    Type: String
    Description: Name of the cloudformation stack for the application structure
    Default: cfn-structure
  GitHubOwner:
    Type: String
    Description: GitHub Owner
    Default: Raptorex65
  GitHubRepo:
    Type: String
    Description: GitHub Repo
    Default: 'https://github.com/Raptorex65/cloud-phoenix-kata.git'
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: prod
  GitHubToken:
    Type: AWS::SSM::Parameter::Value<String>
    Default: Github_Token

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: Phoenix-Pipe
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Location: pipe-source
        Type: S3
      DisableInboundStageTransitions: []
      Stages:
        - Name: GitHubSource
          Actions:
          - Name: Source
            InputArtifacts: []
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Version: 1
              Provider: GitHub
            Configuration:
              Owner: !Ref GitHubOwner
              Repo: !Ref GitHubRepo
              Branch: !Ref GitHubBranch
              OAuthToken: !Ref GitHubToken
            OutputArtifacts:
              - Name: SourceCode
            RunOrder: 1
        - Name: Build
          Actions:
          - Name: PhoenixAppBuild
            InputArtifacts:
              - Name: SourceCode
            OutputArtifacts:
              - Name: BuildCode
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref CodeBuildPhoenix
        - Name: Deploy
          Actions:
          - Name: CloudFormationDeploy
            InputArtifacts:
              - Name: BuildCode
            OutputArtifacts:
              - Name: Artifact
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: 1
              Provider: CloudFormation
            Configuration: 
              ApplicationName: PhoenixApplix 
              DeploymentGroupName: PhoenixAppDG
              ActionMode: CREATE_UPDATE
              ChangeSetName: pipeline-changeset
              RoleArn: !GetAtt CloudFormationRole.Arn
              StackName: !Ref CFNStackname
              Capabilities: CAPABILITY_NAMED_IAM
              TemplatePath: 'my-project--BuildArtifact::cfn-structure.yaml'
              RunOrder: 1 
      Tags:
        - Key: Env
          Value: Prod

  CodeBuildPhoenix:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${PipelineName}-Build-Project'
      Artifacts: 
        Type: no_artifacts
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: IMAGE_REPO_NAME
            Value: phoenix-build
            Type: PLAINTEXT
          - Name: IMAGE_TAG
            Value: Latest
            Type: PLAINTEXT
          - Name: AWS_DEFAULT_REGION
            Value: us-east-1
            Type: PLAINTEXT
          - Name: DOCKERHUB_USER
            Value: /CodeBuild/DOCKERHUB_USER
            Type: PARAMETER_STORE
          - Name: DOCKERHUB_TOKEN
            Value: /CodeBuild/DOCKERHUB_TOKEN
            Type: PARAMETER_STORE
          - Name: AWS_ACCOUNT_ID
            Value: /CodeBuild/AWS_ACCOUNT_ID
            Type: PARAMETER_STORE
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: GITHUB
        Location: https://github.com/Raptorex65/cloud-phoenix-kata.git
      Triggers:
        BuildType: BUILD
        Webhook: true
        FilterGroups:
        - - Type: EVENT
            Pattern: PUSH,PULL_REQUEST_MERGED
          - Type: HEAD_REF
            Pattern: ^refs/heads/prod$
            ExcludeMatchedPattern: false

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "PushImageToEcr"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                  - ecr:GetAuthorizationToken
                Resource: "*"
        - PolicyName: "CodeBuildLogsRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${PipelineName}-cloudformation'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 
                - cloudformation.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
        - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
        - "arn:aws:iam::aws:policy/IAMFullAccess"
        - "arn:aws:iam::aws:policy/AWSCodeDeployFullAccess"
      Policies:
        - PolicyName: !Sub '${PipelineName}-cloudformation'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                - 's3:GetObject'
                - 's3:GetObjectVersion'
                - 's3:GetBucketVersioning'
              - Effect: Allow
                Resource: 'arn:aws:s3:::codepipeline*'
                Action:
                - 's3:PutObject'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${PipelineName}-pipeline'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
      Path: /
      Policies:
        - PolicyName: Pipeline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:GetObject'
                - 's3:GetObjectVersion'
                - 's3:GetBucketVersioning'
                Effect: 'Allow'
                Resource: '*'
              - Action:
                - 's3:PutObject'
                Effect: 'Allow'
                Resource:
                - arn:aws:s3:::pipe-source
              - Action:
                - 'codecommit:CancelUploadArchive'
                - 'codecommit:GetBranch'
                - 'codecommit:GetCommit'
                - 'codecommit:GetUploadArchiveStatus'
                - 'codecommit:UploadArchive'
                Effect: 'Allow'
                Resource: '*'
              - Action:
                - 'codedeploy:CreateDeployment'
                - 'codedeploy:GetApplicationRevision'
                - 'codedeploy:GetDeployment'
                - 'codedeploy:GetDeploymentConfig'
                - 'codedeploy:RegisterApplicationRevision'
                Effect: 'Allow'
                Resource: '*'
              - Action:
                - 'ec2:*'
                - 'elasticloadbalancing:*'
                - 'autoscaling:*'
                - 'cloudwatch:*'
                - 's3:*'
                - 'sns:*'
                - 'cloudformation:*'
                - 'ecs:*'
                - 'iam:PassRole'
                Effect: 'Allow'
                Resource: '*'
              - Action:
                - 'opsworks:CreateDeployment'
                - 'opsworks:DescribeApps'
                - 'opsworks:DescribeCommands'
                - 'opsworks:DescribeDeployments'
                - 'opsworks:DescribeInstances'
                - 'opsworks:DescribeStacks'
                - 'opsworks:UpdateApp'
                - 'opsworks:UpdateStack'
                Effect: 'Allow'
                Resource: '*'
              - Action:
                - 'cloudformation:CreateStack'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'cloudformation:ValidateTemplate'
                - 'iam:PassRole'
                Effect: 'Allow'
                Resource: '*'
              - Action:
                - 'codebuild:BatchGetBuilds'
                - 'codebuild:StartBuild'
                Effect: 'Allow'
                Resource: '*'
Outputs:
  ProjectName:
    Value: !Ref CodeBuildPhoenix
    Description: CodeBuild project name